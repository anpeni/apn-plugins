// Importando los hooks y componentes necesarios de React y material-ui
import React, { useEffect } from 'react';
import Typography from '@material-ui/core/Typography';
import { useTheme, useMediaQuery } from '@material-ui/core';
import { alertApiRef, useApi } from '@backstage/core-plugin-api';
// Importando componentes y hooks personalizados

import { useSonarData } from '../../hooks/useSonarData';
import { useSonarRatingB } from '../../hooks/useSonarRatingB';
import { useSse } from '../../hooks/useSse';
import { Rating } from './AverageRatingGraph';
import { useStyles } from '../style';
import { UptimeCardProps } from '../../types';

// Definición del componente CurrentVulnerabilitySummaryFetch
export const CurrentVulnerabilitySummaryFetch: React.FC<UptimeCardProps> = ({ title }) => {
  // Uso de hooks para los estilos y tema de Material-UI
  const classes = useStyles();
  const theme = useTheme();
  const isLaptop = useMediaQuery(theme.breakpoints.down(1370));
  const isIpad = useMediaQuery(theme.breakpoints.down(900));
  const isMobile = useMediaQuery(theme.breakpoints.down(600));
  const alertApi = useApi(alertApiRef);
  // Utilización de un hook personalizado para obtener datos de sonar y manejar la carga
  const { data, fetchData } = useSonarData();
  const { rate, fetchRate } = useSonarRatingB();

    // Callback para manejar mensajes recibidos a través de SSE
    // @ts-ignore
    const handleSseMessage = (message: any) => {
      fetchData();
      fetchRate();
      alertApi.post({
        message: 'A new analysis has been completed on SonarCloud.',
        severity: 'success',
        display: 'transient',
      });
    };
  
    useSse('https://app.dev.svsm.neoris.cloud/api/sonarcloud-server/events', handleSseMessage);
  


  // useEffect para llamar a fetchData cuando el componente se monte
  useEffect(() => {
    fetchData();
    fetchRate();

    
  }, [fetchData,fetchRate]); // Dependencia para asegurarse de que fetchData es estable a través de renderizados

  // JSX para mostrar la interfaz del componente
  return (
    <div className={classes.content}>
      <Typography className={classes.titulo}>{title}</Typography>
      <div className={classes.card}>
        {/* Sección para mostrar la información de vulnerabilidades */}
        <div>
          {/* Muestra la cantidad de vulnerabilidades críticas */}
          <div style={{ display: 'flex', alignItems: 'center' }}>
            <Typography
              className={classes.stateNumber}
              style={{ color: '#EE3131', paddingLeft: 0 }}
            >
              {data.critical}
            </Typography>
            <Typography className={classes.state} style={{ paddingLeft: isMobile ? 19 : isIpad ? 23 : isLaptop ? 21 : 20 }}>
              Critical
            </Typography>
          </div>
          {/* Muestra la cantidad de vulnerabilidades altas */}
          <div style={{ display: 'flex', alignItems: 'center' }}>
            <Typography
              className={classes.stateNumber}
              style={{ color: '#F48D46' }}
            >
              {data.high}
            </Typography>
            <Typography className={classes.state} style={{ paddingLeft: '20px' }}>
              High
            </Typography>
          </div>
          {/* Muestra la cantidad de vulnerabilidades medias */}
          <div style={{ display: 'flex', alignItems: 'center' }}>
            <Typography
              className={classes.stateNumber}
              style={{ color: '#FFC821' }}
            >
              {data.medium}
            </Typography>
            <Typography className={classes.state} style={{ paddingLeft: '20px' }}>
              Medium
            </Typography>
          </div>
          {/* Muestra la cantidad de vulnerabilidades bajas */}
          <div style={{ display: 'flex', alignItems: 'center' }}>
            <Typography
              className={classes.stateNumber}
              style={{ color: '#1DE76E' }}
            >
              {data.low}
            </Typography>
            <Typography className={classes.state} style={{ paddingLeft: '20px' }}>
              Low
            </Typography>
          </div>
        </div>
        {/* Sección para mostrar la calificación promedio usando el componente Rating */}
        <div>
        {rate !== null ? <Rating rating={rate}></Rating> : <Typography>No rating available</Typography>}
         
        </div>
      </div>
    </div>
  );
};
